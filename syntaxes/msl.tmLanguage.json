{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "MSL",
    "scopeName": "source.msl",
    "fileTypes": ["msl"],
    "patterns": [
        { "include": "#comments" },
        { "include": "#ifBlock" },
        { "include": "#loopBlock" },
        { "include": "#subroutineBlock" },
        { "include": "#odbpaths" },
        { "include": "#odbpathsFull" },
        { "include": "#variables" },
        { "include": "#variableAssignment" },
        { "include": "#variableParameter" },
        { "include": "#constants" },
        { "include": "#operators" },
        { "include": "#keywords" },
        { "include": "#packageImport" },
        { "include": "#odbfunctions" },
        { "include": "#builtinFunctions" },
        { "include": "#functions" },
        { "include": "#functionCalls" },
        { "include": "#types" },
        { "include": "#numbers" },
        { "include": "#strings" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign",
                    "match": "(?<=\\s|^)(#+.*)"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.conditional",
                    "match": "\\b(IF|ELSE|ENDIF)\\b"
                },
                {
                    "name": "keyword.control.loop",
                    "match": "\\b(LOOP|ENDLOOP|BREAK)\\b"
                },
                {
                    "name": "entity.name.class",
                    "match": "\\b(SUBROUTINE|ENDSUBROUTINE|CALL)\\b"
                },
                {
                    "name": "keyword.control",
                    "match": "\\b(PARAM|LIBRARY|INCLUDE)\\b"
                },
                {
                    "name": "function.support.builtin",
                    "match": "\\b(MSG|WAIT|CAT|COMMENT|MESSAGE)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other",
                    "match": "\\$(?:[A-Za-z_][A-Za-z0-9_]*)(?!\\d)|\\$(?:[A-Za-z_][A-Za-z0-9_]*)(?!\\d+)"
                },
                {
                    "name": "variable.other",
                    "match": "(?<=\\b(?:CAT\\s+|,\\s*|LOOP\\s+))\\b[A-Za-z_][A-Za-z0-9_]*\\b"
                }
            ]
        },
        "variableAssignment": {
            "patterns": [
                {
                    "name": "variable.other.definition",
                    "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b(?=\\s*=)"
                }
            ]
        },
        "variableParameter": {
            "patterns": [
                {
                    "name": "variable.parameter",
                    "match": "\\$\\d+"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
        "constants": {
            "name": "constant.language",
            "match": "\\b(ON|OFF|TRUE|FALSE)\\b"
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double",
                    "begin": "\"",
                    "end": "\"|(?=\\r?\\n)",
                    "patterns": [
                        {
                            "name": "constant.character.escape",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "operators": {
            "name": "keyword.operator",
            "match": "=|==|>|<|>=|<="
        },
        "odbpaths": {
            "_legacy": {
                "begin": "(?:(\\$[A-Za-z_][A-Za-z0-9_]*)(\\/))|(\\/)",
                "beginCaptures": {
                    "1": { "name": "variable.other" },
                    "2": { "name": "constant.other.odb-path" },
                    "3": { "name": "constant.other.odb-path" }
                },
                "contentName": "constant.other.odb-path",
                "patterns": [
                    { "include": "#variables" }
                ]
            },
            "begin": "(?:(\\$[A-Za-z_][A-Za-z0-9_]*)(\\/))|(\\/)",
            "beginCaptures": {
                "1": { "name": "variable.other" },
                "2": { "name": "constant.other.odb-path" },
                "3": { "name": "constant.other.odb-path" }
            },  
            "end": "(?=\\s*[,\\r\\n])",
            "contentName": "constant.other.odb-path",
            "patterns": [
                { "include": "#variables" },
                { "include": "#variableParameter" },
                { "include": "#numbers"}
            ]
        },
        "odbpathsFull": {
            "patterns": [
                {
                    "name": "constant.other.odb-path",
                    "match": "\\b(?:\\$?[A-Za-z_][A-Za-z0-9_]*)(?:\\/[A-Za-z_][A-Za-z0-9_]*)+\\b"
                }
            ]
        },
        "odbfunctions": {
            "patterns": [
                {
                    "name": "support.function",
                    "match": "\\b(ODBGET|ODBLOAD|ODBSET|ODBLOOKUP|ODBCREATE|ODBDELETE|ODBSAVE)\\b"
                }
            ]
        },
        "builtinFunctions": {
            "patterns": [
                {
                    "name": "support.function.builtin",
                    "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b(?=\\s*\\()"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function",
                    "match": "(?<=\\bSUBROUTINE\\s+)[A-Za-z_][A-Za-z0-9_]*"
                }
            ]
        },
        "functionCalls": {
            "patterns": [
                {
                    "name": "entity.name.function",
                    "match": "(?<=\\bCALL\\s+)[A-Za-z_][A-Za-z0-9_]*"
                }
            ]
        },
        "ifBlock": {
            "begin": "(\\bIF\\b)",
            "beginCaptures": {
                "1": { "name": "keyword.control.conditional" }
            },
            "end": "(\\bENDIF\\b)",
            "endCaptures": {
                "1": { "name": "keyword.control.conditional" }
            },
            "name": "meta.block.conditional.msl",
            "patterns": [
                { "include": "#comments" },
                { "include": "#keywords" },
                { "include": "#functions" },
                { "include": "#functionCalls" },
                { "include": "#builtinFunctions" },
                { "include": "#variables" },
                { "include": "#variableAssignment"},
                { "include": "#variableParameter" },
                { "include": "#constants" },
                { "include": "#operators" },
                { "include": "#odbfunctions" },
                { "include": "#odbpaths" },
                { "include": "#odbpathsFull" },
                { "include": "#numbers" },
                { "include": "#strings" }
            ]
        },
        "loopBlock": {
            "begin": "(\\bLOOP\\b)",
            "beginCaptures": {
                "1": { "name": "keyword.control.loop" }
            },
            "end": "(\\bENDLOOP\\b)",
            "endCaptures": {
                "1": { "name": "keyword.control.loop" }
            },
            "name": "meta.block.loop.msl",
            "patterns": [
                { "include": "#comments" },
                { "include": "#keywords" },
                { "include": "#functions" },
                { "include": "#functionCalls" },
                { "include": "#builtinFunctions" },
                { "include": "#variables" },
                { "include": "#variableAssignment"},
                { "include": "#variableParameter" },
                { "include": "#constants" },
                { "include": "#operators" },
                { "include": "#odbfunctions" },
                { "include": "#odbpaths" },
                { "include": "#odbpathsFull" },
                { "include": "#numbers" },
                { "include": "#strings" }
            ]
        },
        "subroutineBlock": {
            "begin": "(\\bSUBROUTINE\\b)",
            "beginCaptures": {
                "1": { "name": "entity.name.class" }
            },
            "end": "(\\bENDSUBROUTINE\\b)",
            "endCaptures": {
                "1": { "name": "entity.name.class" }
            },
            "name": "meta.block.subroutine.msl",
            "patterns": [
                { "include": "#comments" },
                { "include": "#keywords" },
                { "include": "#functions" },
                { "include": "#functionCalls" },
                { "include": "#builtinFunctions" },
                { "include": "#variables" },
                { "include": "#variableAssignment"},
                { "include": "#variableParameter" },
                { "include": "#constants" },
                { "include": "#operators" },
                { "include": "#odbfunctions" },
                { "include": "#odbpaths" },
                { "include": "#odbpathsFull" },
                { "include": "#numbers" },
                { "include": "#strings" }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type",
                    "match": "\\b(STRING|INT32|SECONDS)\\b"
                }
            ]
        },
        "packageImport": {
            "patterns": [
                {
                    "name": "storage.modifier.import",
                    "match": "(?<=\\bINCLUDE\\s+)[A-Za-z0-9_.]+"
                }
            ]
        }
    }
}